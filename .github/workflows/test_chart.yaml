name: Lint and Test Charts

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, labeled, unlabeled]

env:
  TAG: v0.0.1
  RELEASE_TAG: v0.0.1
  MANIFEST_IMG: controller
  CONTROLLER_IMG: controller
  CONTROLLER_IMAGE_VERSION: v0.0.1
  PULL_POLICY: Never
  CERT_MANAGER_VERSION: v1.12.3
  RANCHER_VERSION: v2.8.1

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.1

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1
        with:
          version: v3.9.0

      - name: setupGo
        uses: actions/setup-go@v5
        with:
          go-version: '=1.22.0'

      - name: Build docker image
        run: make docker-build

      - name: Add CAPI operator chart repo
        run: helm repo add capi-operator https://kubernetes-sigs.github.io/cluster-api-operator

      - name: Package operator chart
        run: make release-chart

      - name: Run chart-testing (lint)
        run: ct lint --validate-maintainers=false --charts out/charts/rancher-turtles/

      - name: Create kind cluster
        uses: helm/kind-action@v1.9.0
        with:
          cluster_name: kind
          node_image: kindest/node:v1.26.3

      - name: Add local docker image
        run: kind load docker-image ${{ env.MANIFEST_IMG }}:${{ env.TAG }}

      - name: Add cert-manager chart repo
        run: helm repo add jetstack https://charts.jetstack.io

      - name: Add rancher chart repo
        run: helm repo add rancher-stable https://releases.rancher.com/server-charts/stable

      - name: Install cert-manager
        run: helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version ${{ env.CERT_MANAGER_VERSION }} --set installCRDs=true --wait

      - name: Install Rancher
        run: helm install rancher rancher-stable/rancher --namespace cattle-system --create-namespace --set bootstrapPassword=rancheradmin --set replicas=1 --set hostname="e2e.dev.rancher" --set 'extraEnv[0].name=CATTLE_FEATURES' --set global.cattle.psp.enabled=false --version ${{ env.RANCHER_VERSION }} --wait

      - name: Run chart-testing (install)
        run: helm install rancher-turtles out/charts/rancher-turtles/ -n rancher-turtles-system --create-namespace --wait

      - name: Run chart-testing (un-install)
        run: helm uninstall rancher-turtles -n rancher-turtles-system --wait
